<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About on Sławek Gonet</title>
    <link>https://slawekgonet.pl/</link>
    <description>Recent content in About on Sławek Gonet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Jan 2020 22:50:56 +0100</lastBuildDate><atom:link href="https://slawekgonet.pl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CNC Router v1</title>
      <link>https://slawekgonet.pl/hardware/cnc-router-v1/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://slawekgonet.pl/hardware/cnc-router-v1/</guid>
      <description>CNC-Router v1 (2020) Design Designing overall construction based on hardware left from all-metal 3D printer.             
Mechanical construction Building V1 of new CNC-Router. Some design issues are becoming clearly visible - X axis rigidity in reality does not exist, 20mm linear shafts are really not rigid enough without any support at that length.
Some parts were made using to-be-disassembled 3D printer.</description>
    </item>
    
    <item>
      <title>Dassault Mystère Joystick</title>
      <link>https://slawekgonet.pl/hardware/dassault-mystere-joystick/</link>
      <pubDate>Sun, 19 Apr 2020 15:11:25 +0100</pubDate>
      
      <guid>https://slawekgonet.pl/hardware/dassault-mystere-joystick/</guid>
      <description>PC joystick built from French fighter scrap parts Design and build of PC joystick around what was once (possibly) a part of old Dassault&amp;rsquo;s fighter jet.
Original photos of so-called &amp;ldquo;French Fighter&amp;rdquo; joystick.                  Point-of-View controller                  Design and work in progress                                          Completed controller          </description>
    </item>
    
    <item>
      <title>spec-debug</title>
      <link>https://slawekgonet.pl/software/spec-debug/</link>
      <pubDate>Thu, 05 Mar 2020 23:29:10 +0100</pubDate>
      
      <guid>https://slawekgonet.pl/software/spec-debug/</guid>
      <description>Debug helper which I&amp;rsquo;ve been always missing - minimal helper for instrumenting (clojure.spec.alpha/valid?) with more verbose output.
This should be treated as debug facility and not be enabled on production by default - especially, when there are spec/valid? statements expected to fail non-catastrophically used in performance-sensitive parts of code.
Kudos to @github/bhb for expound library which made this little helper possible.
My setup Following profiles.clj configuration:
$ cat .lein/profiles.clj {:user {:dependencies [[org.</description>
    </item>
    
    <item>
      <title>burp_exporter</title>
      <link>https://slawekgonet.pl/software/burp-exporter/</link>
      <pubDate>Tue, 03 Mar 2020 21:12:17 +0100</pubDate>
      
      <guid>https://slawekgonet.pl/software/burp-exporter/</guid>
      <description>Prometheus exporter for BURP backup program burp written in Python.
burp_exporter operates directly on BURP spool directory thus has to be running on the same machine as server, but does not require complex configuration as a client of monitor protocol.
See burp_exporter on GitHub for more info.</description>
    </item>
    
    <item>
      <title>clj-grpc</title>
      <link>https://slawekgonet.pl/software/clj-grpc/</link>
      <pubDate>Thu, 14 Nov 2019 23:29:10 +0100</pubDate>
      
      <guid>https://slawekgonet.pl/software/clj-grpc/</guid>
      <description>When it comes to gRPC in Clojure, there is (what seem like) great library clojusc/protobuf. Unfortunately, for someone without any past gRPC experience, it has quite steep learning curve as it&amp;rsquo;s difficult to relate it directly to official Java documentation available on https://grpc.io.
I have created clj-grpc partly as a gRPC learning exercise, but mainly to use it in one of our projects in Emergynt. I tried not to reinvent any wheels in process, but just provide hassle-free experience without unnecessary Java interop while strongly reassembling workflow from well documented Java bindings.</description>
    </item>
    
    <item>
      <title>liberator-swagger</title>
      <link>https://slawekgonet.pl/software/liberator-swagger/</link>
      <pubDate>Mon, 08 Jul 2019 23:39:10 +0200</pubDate>
      
      <guid>https://slawekgonet.pl/software/liberator-swagger/</guid>
      <description>Swagger become de-facto standard for REST API documentation, so it was obvious choice for describing liberator resources I was exposing in one of Emergynt projects. There is awesome metosin/spec-tools library enabling generation of Swagger definitions from Spec.
It seemed like good fit to merge liberator with spec-tools:
 Documentation is written where inside resource definition, keeping code well organized and easy to understand. Various handlers, like handle-not-found or handle-malformed can be generated automatically for meaningful error messages.</description>
    </item>
    
    <item>
      <title>Tour-throw for Rottefella Chili</title>
      <link>https://slawekgonet.pl/hardware/rottefella-chili-tour-throw/</link>
      <pubDate>Mon, 18 Feb 2019 22:14:25 +0100</pubDate>
      
      <guid>https://slawekgonet.pl/hardware/rottefella-chili-tour-throw/</guid>
      <description>Tour-throw is common name for simple way of loosening spring tension in telemark ski bindings, especially useful for long tours over flat terrains. This is an addon to Rotefella Chili telemark bindings, which out of the box only include single position heel lever.
                   </description>
    </item>
    
    <item>
      <title>All-metal 3D printer</title>
      <link>https://slawekgonet.pl/hardware/all-metal-3d-printer/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://slawekgonet.pl/hardware/all-metal-3d-printer/</guid>
      <description>All-metal 3D Printer Printer design which tried to be more rigid and cheaper than what was then available on market.
Design          Assembly                              Printing and milling              </description>
    </item>
    
    <item>
      <title>clj-systemd</title>
      <link>https://slawekgonet.pl/software/clj-systemd/</link>
      <pubDate>Mon, 06 Aug 2018 23:29:10 +0200</pubDate>
      
      <guid>https://slawekgonet.pl/software/clj-systemd/</guid>
      <description>Simple wrapper on top of thjomnx/java-systemd for Clojure, only partially completed.
See clj-systemd on GitHub for more info.</description>
    </item>
    
  </channel>
</rss>
